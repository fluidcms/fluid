var AUTOBAHNJS_VERSION="?.?.?";!function(root,factory){"function"==typeof define&&define.amd?define(["when"],function(when){return root.ab=factory(when)}):"undefined"!=typeof exports?"undefined"!=typeof module&&module.exports&&(exports=module.exports=factory(root.when)):root.ab=factory(root.when)}(this,function(when){"use strict";var ab={};return ab._version=AUTOBAHNJS_VERSION,function(){Array.prototype.indexOf||(Array.prototype.indexOf=function(searchElement){if(null===this)throw new TypeError;var t=new Object(this),len=t.length>>>0;if(0===len)return-1;var n=0;if(arguments.length>0&&(n=Number(arguments[1]),n!==n?n=0:0!==n&&1/0!==n&&n!==-1/0&&(n=(n>0||-1)*Math.floor(Math.abs(n)))),n>=len)return-1;for(var k=n>=0?n:Math.max(len-Math.abs(n),0);len>k;k++)if(k in t&&t[k]===searchElement)return k;return-1}),Array.prototype.forEach||(Array.prototype.forEach=function(callback,thisArg){var T,k;if(null===this)throw new TypeError(" this is null or not defined");var O=new Object(this),len=O.length>>>0;if("[object Function]"!=={}.toString.call(callback))throw new TypeError(callback+" is not a function");for(thisArg&&(T=thisArg),k=0;len>k;){var kValue;k in O&&(kValue=O[k],callback.call(T,kValue,k,O)),k++}})}(),ab._sliceUserAgent=function(str,delim,delim2){var ver=[],ua=navigator.userAgent,i=ua.indexOf(str),j=ua.indexOf(delim,i);0>j&&(j=ua.length);for(var agent=ua.slice(i,j).split(delim2),v=agent[1].split("."),k=0;k<v.length;++k)ver.push(parseInt(v[k],10));return{name:agent[0],version:ver}},ab.getBrowser=function(){var ua=navigator.userAgent;return ua.indexOf("Chrome")>-1?ab._sliceUserAgent("Chrome"," ","/"):ua.indexOf("Safari")>-1?ab._sliceUserAgent("Safari"," ","/"):ua.indexOf("Firefox")>-1?ab._sliceUserAgent("Firefox"," ","/"):ua.indexOf("MSIE")>-1?ab._sliceUserAgent("MSIE",";"," "):null},ab.getServerUrl=function(wsPath,fallbackUrl){if("file:"===window.location.protocol)return fallbackUrl?fallbackUrl:"ws://127.0.0.1/ws";var scheme="https:"===window.location.protocol?"wss://":"ws://",port=""!==window.location.port?":"+window.location.port:"",path=wsPath?wsPath:"ws";return scheme+window.location.hostname+port+"/"+path},ab.browserNotSupportedMessage="Browser does not support WebSockets (RFC6455)",ab.deriveKey=function(secret,extra){if(extra&&extra.salt){var salt=extra.salt,keylen=extra.keylen||32,iterations=extra.iterations||1e4,key=CryptoJS.PBKDF2(secret,salt,{keySize:keylen/4,iterations:iterations,hasher:CryptoJS.algo.SHA256});return key.toString(CryptoJS.enc.Base64)}return secret},ab._idchars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",ab._idlen=16,ab._subprotocol="wamp",ab._newid=function(){for(var id="",i=0;i<ab._idlen;i+=1)id+=ab._idchars.charAt(Math.floor(Math.random()*ab._idchars.length));return id},ab._newidFast=function(){return Math.random().toString(36)},ab.log=function(){if(arguments.length>1){console.group("Log Item");for(var i=0;i<arguments.length;i+=1)console.log(arguments[i]);console.groupEnd()}else console.log(arguments[0])},ab._debugrpc=!1,ab._debugpubsub=!1,ab._debugws=!1,ab._debugconnect=!1,ab.debug=function(debugWamp,debugWs,debugConnect){if(!("console"in window))throw"browser does not support console object";ab._debugrpc=debugWamp,ab._debugpubsub=debugWamp,ab._debugws=debugWs,ab._debugconnect=debugConnect},ab.version=function(){return ab._version},ab.PrefixMap=function(){var self=this;self._index={},self._rindex={}},ab.PrefixMap.prototype.get=function(prefix){var self=this;return self._index[prefix]},ab.PrefixMap.prototype.set=function(prefix,uri){var self=this;self._index[prefix]=uri,self._rindex[uri]=prefix},ab.PrefixMap.prototype.setDefault=function(uri){var self=this;self._index[""]=uri,self._rindex[uri]=""},ab.PrefixMap.prototype.remove=function(prefix){var self=this,uri=self._index[prefix];uri&&(delete self._index[prefix],delete self._rindex[uri])},ab.PrefixMap.prototype.resolve=function(curie,pass){var self=this,i=curie.indexOf(":");if(i>=0){var prefix=curie.substring(0,i);if(self._index[prefix])return self._index[prefix]+curie.substring(i+1)}return pass===!0?curie:null},ab.PrefixMap.prototype.shrink=function(uri,pass){for(var self=this,i=uri.length;i>0;i-=1){var u=uri.substring(0,i),p=self._rindex[u];if(p)return p+":"+uri.substring(i)}return pass===!0?uri:null},ab._MESSAGE_TYPEID_WELCOME=0,ab._MESSAGE_TYPEID_PREFIX=1,ab._MESSAGE_TYPEID_CALL=2,ab._MESSAGE_TYPEID_CALL_RESULT=3,ab._MESSAGE_TYPEID_CALL_ERROR=4,ab._MESSAGE_TYPEID_SUBSCRIBE=5,ab._MESSAGE_TYPEID_UNSUBSCRIBE=6,ab._MESSAGE_TYPEID_PUBLISH=7,ab._MESSAGE_TYPEID_EVENT=8,ab.CONNECTION_CLOSED=0,ab.CONNECTION_LOST=1,ab.CONNECTION_RETRIES_EXCEEDED=2,ab.CONNECTION_UNREACHABLE=3,ab.CONNECTION_UNSUPPORTED=4,ab.CONNECTION_UNREACHABLE_SCHEDULED_RECONNECT=5,ab.CONNECTION_LOST_SCHEDULED_RECONNECT=6,ab.Deferred=when.defer,ab._construct=function(url,protocols){return"WebSocket"in window?protocols?new WebSocket(url,protocols):new WebSocket(url):"MozWebSocket"in window?protocols?new MozWebSocket(url,protocols):new MozWebSocket(url):null},ab.Session=function(wsuri,onopen,onclose,options){var self=this;if(self._wsuri=wsuri,self._options=options,self._websocket_onopen=onopen,self._websocket_onclose=onclose,self._websocket=null,self._websocket_connected=!1,self._session_id=null,self._wamp_version=null,self._server=null,self._calls={},self._subscriptions={},self._prefixes=new ab.PrefixMap,self._txcnt=0,self._rxcnt=0,self._websocket=self._options&&self._options.skipSubprotocolAnnounce?ab._construct(self._wsuri):ab._construct(self._wsuri,[ab._subprotocol]),!self._websocket){if(void 0!==onclose)return onclose(ab.CONNECTION_UNSUPPORTED),void 0;throw ab.browserNotSupportedMessage}self._websocket.onmessage=function(e){ab._debugws&&(self._rxcnt+=1,console.group("WS Receive"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(self._rxcnt),console.log(e.data),console.groupEnd());var o=JSON.parse(e.data);if(o[1]in self._calls){if(o[0]===ab._MESSAGE_TYPEID_CALL_RESULT){var dr=self._calls[o[1]],r=o[2];if(ab._debugrpc&&void 0!==dr._ab_callobj){console.group("WAMP Call",dr._ab_callobj[2]),console.timeEnd(dr._ab_tid),console.group("Arguments");for(var i=3;i<dr._ab_callobj.length;i+=1){var arg=dr._ab_callobj[i];if(void 0===arg)break;console.log(arg)}console.groupEnd(),console.group("Result"),console.log(r),console.groupEnd(),console.groupEnd()}dr.resolve(r)}else if(o[0]===ab._MESSAGE_TYPEID_CALL_ERROR){var de=self._calls[o[1]],uri_=o[2],desc_=o[3],detail_=o[4];if(ab._debugrpc&&void 0!==de._ab_callobj){console.group("WAMP Call",de._ab_callobj[2]),console.timeEnd(de._ab_tid),console.group("Arguments");for(var j=3;j<de._ab_callobj.length;j+=1){var arg2=de._ab_callobj[j];if(void 0===arg2)break;console.log(arg2)}console.groupEnd(),console.group("Error"),console.log(uri_),console.log(desc_),void 0!==detail_&&console.log(detail_),console.groupEnd(),console.groupEnd()}void 0!==detail_?de.reject({uri:uri_,desc:desc_,detail:detail_}):de.reject({uri:uri_,desc:desc_})}delete self._calls[o[1]]}else if(o[0]===ab._MESSAGE_TYPEID_EVENT){var subid=self._prefixes.resolve(o[1],!0);if(subid in self._subscriptions){var uri2=o[1],val=o[2];ab._debugpubsub&&(console.group("WAMP Event"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(uri2),console.log(val),console.groupEnd()),self._subscriptions[subid].forEach(function(callback){callback(uri2,val)})}}else if(o[0]===ab._MESSAGE_TYPEID_WELCOME){if(null!==self._session_id)throw"protocol error (welcome message received more than once)";self._session_id=o[1],self._wamp_version=o[2],self._server=o[3],(ab._debugrpc||ab._debugpubsub)&&(console.group("WAMP Welcome"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(self._wamp_version),console.log(self._server),console.groupEnd()),null!==self._websocket_onopen&&self._websocket_onopen()}},self._websocket.onopen=function(){if(self._websocket.protocol!==ab._subprotocol)if("undefined"==typeof self._websocket.protocol)ab._debugws&&(console.group("WS Warning"),console.info(self._wsuri),console.log("WebSocket object has no protocol attribute: WAMP subprotocol check skipped!"),console.groupEnd());else{if(!self._options||!self._options.skipSubprotocolCheck)throw self._websocket.close(1e3,"server does not speak WAMP"),"server does not speak WAMP (but '"+self._websocket.protocol+"' !)";ab._debugws&&(console.group("WS Warning"),console.info(self._wsuri),console.log("Server does not speak WAMP, but subprotocol check disabled by option!"),console.log(self._websocket.protocol),console.groupEnd())}ab._debugws&&(console.group("WAMP Connect"),console.info(self._wsuri),console.log(self._websocket.protocol),console.groupEnd()),self._websocket_connected=!0},self._websocket.onerror=function(){},self._websocket.onclose=function(e){ab._debugws&&(self._websocket_connected?console.log("Autobahn connection to "+self._wsuri+" lost (code "+e.code+", reason '"+e.reason+"', wasClean "+e.wasClean+")."):console.log("Autobahn could not connect to "+self._wsuri+" (code "+e.code+", reason '"+e.reason+"', wasClean "+e.wasClean+").")),void 0!==self._websocket_onclose&&(self._websocket_connected?e.wasClean?self._websocket_onclose(ab.CONNECTION_CLOSED,"WS-"+e.code+": "+e.reason):self._websocket_onclose(ab.CONNECTION_LOST):self._websocket_onclose(ab.CONNECTION_UNREACHABLE)),self._websocket_connected=!1,self._wsuri=null,self._websocket_onopen=null,self._websocket_onclose=null,self._websocket=null},self.log=function(){self._options&&"sessionIdent"in self._options?console.group("WAMP Session '"+self._options.sessionIdent+"' ["+self._session_id+"]"):console.group("WAMP Session ["+self._session_id+"]");for(var i=0;i<arguments.length;++i)console.log(arguments[i]);console.groupEnd()}},ab.Session.prototype._send=function(msg){var self=this;if(!self._websocket_connected)throw"Autobahn not connected";var rmsg;switch(!0){case window.Prototype&&"undefined"==typeof top.window.__prototype_deleted:case"function"==typeof msg.toJSON:rmsg=msg.toJSON();break;default:rmsg=JSON.stringify(msg)}self._websocket.send(rmsg),self._txcnt+=1,ab._debugws&&(console.group("WS Send"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(self._txcnt),console.log(rmsg),console.groupEnd())},ab.Session.prototype.close=function(){var self=this;self._websocket_connected&&self._websocket.close()},ab.Session.prototype.sessionid=function(){var self=this;return self._session_id},ab.Session.prototype.wsuri=function(){var self=this;return self._wsuri},ab.Session.prototype.shrink=function(uri,pass){var self=this;return void 0===pass&&(pass=!0),self._prefixes.shrink(uri,pass)},ab.Session.prototype.resolve=function(curie,pass){var self=this;return void 0===pass&&(pass=!0),self._prefixes.resolve(curie,pass)},ab.Session.prototype.prefix=function(prefix,uri){var self=this;self._prefixes.set(prefix,uri),(ab._debugrpc||ab._debugpubsub)&&(console.group("WAMP Prefix"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(prefix),console.log(uri),console.groupEnd());var msg=[ab._MESSAGE_TYPEID_PREFIX,prefix,uri];self._send(msg)},ab.Session.prototype.call=function(){for(var callid,self=this,d=new ab.Deferred;;)if(callid=ab._newidFast(),!(callid in self._calls))break;self._calls[callid]=d;for(var procuri=self._prefixes.shrink(arguments[0],!0),obj=[ab._MESSAGE_TYPEID_CALL,callid,procuri],i=1;i<arguments.length;i+=1)obj.push(arguments[i]);return self._send(obj),ab._debugrpc&&(d._ab_callobj=obj,d._ab_tid=self._wsuri+"  ["+self._session_id+"]["+callid+"]",console.time(d._ab_tid),console.info()),d.promise.then?d.promise:d},ab.Session.prototype.subscribe=function(topicuri,callback){var self=this,rtopicuri=self._prefixes.resolve(topicuri,!0);if(!(rtopicuri in self._subscriptions)){ab._debugpubsub&&(console.group("WAMP Subscribe"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(topicuri),console.log(callback),console.groupEnd());var msg=[ab._MESSAGE_TYPEID_SUBSCRIBE,topicuri];self._send(msg),self._subscriptions[rtopicuri]=[]}var i=self._subscriptions[rtopicuri].indexOf(callback);if(-1!==i)throw"callback "+callback+" already subscribed for topic "+rtopicuri;self._subscriptions[rtopicuri].push(callback)},ab.Session.prototype.unsubscribe=function(topicuri,callback){var self=this,rtopicuri=self._prefixes.resolve(topicuri,!0);if(!(rtopicuri in self._subscriptions))throw"not subscribed to topic "+rtopicuri;var removed;if(void 0!==callback){var idx=self._subscriptions[rtopicuri].indexOf(callback);if(-1===idx)throw"no callback "+callback+" subscribed on topic "+rtopicuri;removed=callback,self._subscriptions[rtopicuri].splice(idx,1)}else removed=self._subscriptions[rtopicuri].slice(),self._subscriptions[rtopicuri]=[];if(0===self._subscriptions[rtopicuri].length){delete self._subscriptions[rtopicuri],ab._debugpubsub&&(console.group("WAMP Unsubscribe"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(topicuri),console.log(removed),console.groupEnd());var msg=[ab._MESSAGE_TYPEID_UNSUBSCRIBE,topicuri];self._send(msg)}},ab.Session.prototype.publish=function(){var self=this,topicuri=arguments[0],event=arguments[1],excludeMe=null,exclude=null,eligible=null,msg=null;if(arguments.length>3){if(!(arguments[2]instanceof Array))throw"invalid argument type(s)";if(!(arguments[3]instanceof Array))throw"invalid argument type(s)";exclude=arguments[2],eligible=arguments[3],msg=[ab._MESSAGE_TYPEID_PUBLISH,topicuri,event,exclude,eligible]}else if(arguments.length>2)if("boolean"==typeof arguments[2])excludeMe=arguments[2],msg=[ab._MESSAGE_TYPEID_PUBLISH,topicuri,event,excludeMe];else{if(!(arguments[2]instanceof Array))throw"invalid argument type(s)";exclude=arguments[2],msg=[ab._MESSAGE_TYPEID_PUBLISH,topicuri,event,exclude]}else msg=[ab._MESSAGE_TYPEID_PUBLISH,topicuri,event];ab._debugpubsub&&(console.group("WAMP Publish"),console.info(self._wsuri+"  ["+self._session_id+"]"),console.log(topicuri),console.log(event),null!==excludeMe?console.log(excludeMe):null!==exclude&&(console.log(exclude),null!==eligible&&console.log(eligible)),console.groupEnd()),self._send(msg)},ab.Session.prototype.authreq=function(appkey,extra){return this.call("http://api.wamp.ws/procedure#authreq",appkey,extra)},ab.Session.prototype.authsign=function(challenge,secret){return secret||(secret=""),CryptoJS.HmacSHA256(challenge,secret).toString(CryptoJS.enc.Base64)},ab.Session.prototype.auth=function(signature){return this.call("http://api.wamp.ws/procedure#auth",signature)},ab._connect=function(peer){var sess=new ab.Session(peer.wsuri,function(){peer.connects+=1,peer.retryCount=0,peer.onConnect(sess)},function(code,reason){var stop=null;switch(code){case ab.CONNECTION_CLOSED:peer.onHangup(code,"Connection was closed properly ["+reason+"]");break;case ab.CONNECTION_UNSUPPORTED:peer.onHangup(code,"Browser does not support WebSocket.");break;case ab.CONNECTION_UNREACHABLE:peer.retryCount+=1,0===peer.connects?peer.onHangup(code,"Connection could not be established."):peer.retryCount<=peer.options.maxRetries?(stop=peer.onHangup(ab.CONNECTION_UNREACHABLE_SCHEDULED_RECONNECT,"Connection unreachable - scheduled reconnect to occur in "+peer.options.retryDelay/1e3+" second(s) - attempt "+peer.retryCount+" of "+peer.options.maxRetries+".",{delay:peer.options.retryDelay,retries:peer.retryCount,maxretries:peer.options.maxRetries}),stop?(ab._debugconnect&&console.log("Connection unreachable - retrying stopped by app"),peer.onHangup(ab.CONNECTION_RETRIES_EXCEEDED,"Number of connection retries exceeded.")):(ab._debugconnect&&console.log("Connection unreachable - retrying ("+peer.retryCount+") .."),window.setTimeout(ab._connect,peer.options.retryDelay,peer))):peer.onHangup(ab.CONNECTION_RETRIES_EXCEEDED,"Number of connection retries exceeded.");break;case ab.CONNECTION_LOST:peer.retryCount+=1,peer.retryCount<=peer.options.maxRetries?(stop=peer.onHangup(ab.CONNECTION_LOST_SCHEDULED_RECONNECT,"Connection lost - scheduled "+peer.retryCount+"th reconnect to occur in "+peer.options.retryDelay/1e3+" second(s).",{delay:peer.options.retryDelay,retries:peer.retryCount,maxretries:peer.options.maxRetries}),stop?(ab._debugconnect&&console.log("Connection lost - retrying stopped by app"),peer.onHangup(ab.CONNECTION_RETRIES_EXCEEDED,"Connection lost.")):(ab._debugconnect&&console.log("Connection lost - retrying ("+peer.retryCount+") .."),window.setTimeout(ab._connect,peer.options.retryDelay,peer))):peer.onHangup(ab.CONNECTION_RETRIES_EXCEEDED,"Connection lost.");break;default:throw"unhandled close code in ab._connect"}},peer.options)},ab.connect=function(wsuri,onconnect,onhangup,options){var peer={};if(peer.wsuri=wsuri,peer.options=options?options:{},void 0===peer.options.retryDelay&&(peer.options.retryDelay=5e3),void 0===peer.options.maxRetries&&(peer.options.maxRetries=10),void 0===peer.options.skipSubprotocolCheck&&(peer.options.skipSubprotocolCheck=!1),void 0===peer.options.skipSubprotocolAnnounce&&(peer.options.skipSubprotocolAnnounce=!1),!onconnect)throw"onConnect handler required!";peer.onConnect=onconnect,peer.onHangup=onhangup?onhangup:function(code,reason,detail){ab._debugconnect&&console.log(code,reason,detail)},peer.connects=0,peer.retryCount=0,ab._connect(peer)},ab.launch=function(appConfig,onOpen,onClose){ab.connect(appConfig.wsuri,function(session){appConfig.appkey&&""!==appConfig.appkey?session.authreq(appConfig.appkey,appConfig.appextra).then(function(challenge){var signature=null;if("function"==typeof appConfig.appsecret)signature=appConfig.appsecret(challenge);else{var secret=ab.deriveKey(appConfig.appsecret,JSON.parse(challenge).authextra);signature=session.authsign(challenge,secret)}session.auth(signature).then(function(){onOpen?onOpen(session):ab._debugconnect&&session.log("Session opened.")},session.log)},session.log):session.authreq().then(function(){session.auth().then(function(){onOpen?onOpen(session):ab._debugconnect&&session.log("Session opened.")},session.log)},session.log)},function(code,reason,detail){onClose?onClose(code,reason,detail):ab._debugconnect&&ab.log("Session closed.",code,reason,detail)},appConfig.sessionConfig)},ab});